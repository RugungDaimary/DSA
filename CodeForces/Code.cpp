#include <bits/stdc++.h>#include <numeric>#include<cmath>using namespace std;#define fastio()                      \    ios_base::sync_with_stdio(false); \    cin.tie(NULL);                    \    cout.tie(NULL)#define MOD 1000000007#define MOD1 998244353#define N 1e9 + 7#define INF 1e18#define yes cout<<"YES"<<endl;#define no cout<<"NO"<<endl;#define vi vector<int>#define vll vector<long long>#define vvi vector<vector<int>>#define pii pair<int,int>#define vpii vector<pair<int,int>>#define pb push_back#define ppb pop_back#define mp make_pair#define ff first#define ss second#define PI 3.141592653589793238462#define set_bits __builtin_popcountll#define sz(x) ((int)(x).size())#define all(x) (x).begin(), (x).end()typedef long long ll;typedef unsigned long long ull;typedef long double lld;#ifndef ONLINE_JUDGE#define debug(x)       \    cerr << #x << " "; \    _print(x);         \    cerr << endl;#else#define debug(x)#endifvoid _print(ll t) { cerr << t; }void _print(int t) { cerr << t; }void _print(string t) { cerr << t; }void _print(char t) { cerr << t; }void _print(lld t) { cerr << t; }void _print(double t) { cerr << t; }void _print(ull t) { cerr << t; }template <class T, class V>void _print(pair<T, V> p);template <class T>void _print(vector<T> v);template <class T>void _print(set<T> v);template <class T, class V>void _print(map<T, V> v);template <class T>void _print(multiset<T> v);template <class T, class V>void _print(pair<T, V> p){    cerr << "{";    _print(p.ff);    cerr << ",";    _print(p.ss);    cerr << "}";}template <class T>void _print(vector<T> v){    cerr << "[ ";    for (T i : v)    {        _print(i);        cerr << " ";    }    cerr << "]";    cerr << "\n";}template <class T>void _print(set<T> v){    cerr << "[ ";    for (T i : v)    {        _print(i);        cerr << " ";    }    cerr << "]";}template <class T>void _print(multiset<T> v){    cerr << "[ ";    for (T i : v)    {        _print(i);        cerr << " ";    }    cerr << "]";}template <class T, class V>void _print(map<T, V> v){    cerr << "[ ";    for (auto i : v)    {        _print(i);        cerr << " ";    }    cerr << "]";}int max(int a, int b) { return a > b ? a : b; }int min(int a, int b) { return a < b ? a : b; }int hcf(int a, int b){    return (b == 0 ? a : hcf(b, a % b));}int lcm(int x, int y){    return (x * y) / hcf(x, y);}int gcd(int a, int b){    while (b != 0)    {        int temp = b;        b = a % b;        a = temp;    }    return a;}int pow(int x, int y, int p = 1e9 + 7){    int res = 1;    while (y > 0)    {        if (y % 2 == 1)        {            res = (res * x) % p;        }        y = y >> 1;        x = (x * x) % p;    }    return res % p;}bool cmp(const pair<int, int> &a, const pair<int, int> &b)//sorting for priority queue(reverse of vector<pair<int,int>> sorting){    if (a.first == b.first)    {        return a.second < b.second; // Sort ascending by second parameter when first parameters are equal    }    return a.first > b.first; // Otherwise, sort descending by first parameter}int base = 11;int mod = 1e9 + 7;const int x = 1e6 + 3; //size of vectorvector<long long>power(x, 0);void calculatePower() {    for (int i = 0; i < x; i++)    {        if (i == 0)        {            power[0] = 1 ;            continue;        }        power[i] = (power[i - 1] * base) % mod;    }    for (int i = 0; i < 10; i++) {        cerr << power[i] << " ";    }    cerr << endl;}long long calculateHash(int i, int j , string &s) {    long long h = 0;    for (int idx = i; idx <= j; idx++) {        ll index = s[idx] - '0' + 1;        h = (h + index * power[idx - i]) % mod;    }    return h;}void solve(){    /*    calculatePower();    ll n;    cin >> n;    string s1, s2;    cin >> s1 >> s2;    string s = "";    s += s1[0];    int index = -1;    int cnt = 1;    bool flag = false;    for (int i = 0; i < n - 1; i++) {        if (s1[i + 1] > s2[i]) { //s1[i+1]='1' s2[i]='0'            s += s2.substr(i);            break;        } else if (s1[i + 1] < s2[i]) { //s1[i+1]='0' s2[i]='1'            cnt = 1;            s += s1[i + 1];        } else { //if both are '0'. or '1'            s += s1[i + 1];            cnt++;        }    }    if (s.size() != n + 1) {        s += s2[n - 1];    }    ll count = 0;    cout << s << endl;    //using hash function to count the no of possible paths    for (int i = 0; i < n  ; i++) {        ll h1 = calculateHash(0, i - 1, s1);        ll h2 = calculateHash(i + 1, n - 1, s2);        ll p1 = calculateHash(0, i - 1, s);        ll p2 = calculateHash(i + 2, n , s);        if (h1 == p1 && h2 == p2 ) {            // debug(h1);            // debug(h2);            // debug(p1);            // debug(p2);            count++;        }    }    cout << count << endl;    */    ll n;    cin >> n;    vi v = {0, 1, 2, 1, 2, 3, 1, 2, 3, 2, 1, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2};    for (int i = 0; i <= 20; i++) {        cerr << i << "-> " << v[i] << endl;    }    cerr << endl;    if (n <= 20) {        cout << v[n % 15] << endl;    } else if (n % 15 == 5 ) {//have to take (n/15-1)+2        cout << n / 15 + 1 << endl;    }    else if (n % 15 == 8) {//have to take (n/15-1)+3        cout << n / 15 + 2 << endl;    }    else {        // cout << n / 15 + v[n %15] << endl;        int ans = n / 15;        n = n % 15;        ans += n / 10;        n = n % 10;        ans += n / 6;        n = n % 6;        ans += n / 3;        n = n % 3;        ans += n;        cout << ans << endl;    }}int main(){#ifndef ONLINE_JUDGE    freopen("Output.txt", "w", stdout);    freopen("Input.txt", "r", stdin);    freopen("Error.txt", "w", stderr);#endif    int t;    cin >> t;    while (t--) {        solve();    }    return 0;}